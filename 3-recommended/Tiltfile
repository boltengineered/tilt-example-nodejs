# -*- mode: Python -*

k8s_yaml('kubernetes.yaml')
k8s_resource('example-nodejs', port_forwards=8000,
    resource_deps=['deploy']
)
k8s_yaml('kubernetes2.yaml')
k8s_resource('example-nodejs', port_forwards=8001,
    resource_deps=['deploy']
)

# Records the current time, then kicks off a server update.
# Normally, you would let Tilt do deploys automatically, but this
# shows you how to set up a custom workflow that measures it.
local_resource(
    'deploy',
    'python now.py > start-time.txt',
)
BASE_NAME='me'

# Add a live_update rule to our docker_build
congrats = "ðŸŽ‰ Congrats, you ran a live_update! ðŸŽ‰"
docker_build('example-nodejs-image-{base_name}'.format(base_name=BASE_NAME), '.',
    dockerfile='Dockerfile',
    build_args={'node_env': 'development'},
    entrypoint='yarn run nodemon --ext js,mustache /app/index.js',
    live_update=[
        sync('.', '/app'),
        run('cd /app && yarn install', trigger=['./package.json', './yarn.lock']),

        # if all that changed was start-time.txt, make sure the server
        # reloads so that it will reflect the new startup time
        run('touch /app/index.js', trigger='./start-time.txt'),

        # add a congrats message!
        run('sed -i "s/Hello cats!/{}/g" /app/views/index.mustache'.
            format(congrats)),
])

docker_build('example-nodejs-image2', '.',
    dockerfile='Dockerfile2',
    build_args={'node_env': 'development', 'base_name': BASE_NAME},
    entrypoint='yarn run nodemon --ext js,mustache /app/index.js',
    live_update=[
        sync('.', '/app'),
        run('cd /app && yarn install', trigger=['./package.json', './yarn.lock']),

        # if all that changed was start-time.txt, make sure the server
        # reloads so that it will reflect the new startup time
        run('touch /app/index.js', trigger='./start-time.txt'),

        # add a congrats message!
        run('sed -i "s/Hello cats!/{}/g" /app/views/index.mustache'.
            format(congrats)),
])